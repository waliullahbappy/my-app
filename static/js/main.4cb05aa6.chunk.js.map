{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","class","for","toggleBtnChange","onClick","toggleMode","TextForm","useState","text","setText","style","color","heading","onChange","event","target","value","backgroundColor","cursor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","navigator","clipboard","writeText","split","join","length","Alert","alert","role","meg","word","lower","charAt","slice","capitalize","defaultProps","App","setMode","setToggleBtnChange","setAlert","message","setTimeout","body","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4cb05aa6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>        */}\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n\r\n    </div>\r\n    <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'} `}>\r\n    <label className=\"form-check-label \" for=\"flexSwitchCheckDefault\">{props.toggleBtnChange}</label>\r\n     <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  \r\n</div>\r\n  </div>\r\n\r\n</nav>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Default Title'\r\n  };","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\")\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    const handleUpWithClick = ()=>{\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted To Uppercase ....! \",\"success\")\r\n        \r\n    }\r\n    const handleDownWithClick = ()=>{\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted To Lowecase ....! \",\"success\")\r\n        \r\n    }\r\n\r\n    const handleExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Space Removed  .....!\", \"success\")\r\n        \r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        let text = document.getElementById(\"myBox\")\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Copy Done .....!\", \"success\")\r\n    }\r\n\r\n    const handleClear=()=>{\r\n        setText(\"\")\r\n        props.showAlert(\"Clear Done .....!\", \"success\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n<div className=\"container\">\r\n    <h1 style={{color:props.mode==='light'?'black':'white'}}>{props.heading}</h1>\r\n  <textarea className=\"form-control\"  onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'#06c39340',color:props.mode==='light'?'black':'white',cursor:'pointer'}} value={text} id=\"myBox\" rows=\"5\"></textarea>\r\n  <br />\r\n\r\n  <button className=\"btn btn-outline-success mx-2\" onClick={handleUpWithClick} style={{color:props.mode==='light'?'white':'white',backgroundColor:props.mode==='light'?'#198754':'rgba(13,110,253,.25)'}} >Convert To UpperCase</button>\r\n  <button className=\"btn btn-outline-success mx-2\" onClick={handleDownWithClick} style={{color:props.mode==='light'?'white':'white',backgroundColor:props.mode==='light'?'#198754':'rgba(13,110,253,.25)'}}>Convert To UpperCase</button>\r\n  <button className=\"btn btn-outline-success mx-2\" onClick={handleClear} style={{color:props.mode==='light'?'white':'white',backgroundColor:props.mode==='light'?'#198754':'rgba(13,110,253,.25)'}}>Clear</button>\r\n  <button className=\"btn btn-outline-success\" onClick={handleCopy} style={{color:props.mode==='light'?'white':'white',backgroundColor:props.mode==='light'?'#198754':'rgba(13,110,253,.25)'}} >Copy</button>\r\n  <button className=\"btn btn-outline-success mx-2\" onClick={handleExtraSpace} style={{color:props.mode==='light'?'white':'white',backgroundColor:props.mode==='light'?'#198754':'rgba(13,110,253,.25)'}}>Remove Extra Space</button>\r\n\r\n</div>\r\n<div className=\"container my-4\" style={{color:props.mode==='light'?'black':'white'}}>\r\n    <h1>Text Summery</h1>\r\n    <p><strong>{text.split(\" \").length}</strong> Words and <strong>{text.length}</strong> Char.</p>\r\n    <p> Need <strong> {0.088*text.split(\" \").length}</strong> minute to read </p>\r\n    <h3>Preview</h3>\r\n    <strong>{text.length>0?text:\"Enter Something to Preview into the Text Box\"}</strong>\r\n</div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n      \r\n           props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.meg}</strong> : <strong>{capitalize(props.alert.type)}</strong>\r\n                \r\n            </div>\r\n        \r\n    )\r\n}\r\n","import React,{useState} from 'react'\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\n// import About from './components/About'\nimport Alert from './components/Alert'\n// import {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\n\nconst App = () => {\nconst [mode, setMode] = useState(\"light\")\nconst [toggleBtnChange, setToggleBtnChange] = useState(\"Enable Dark Mode\")\nconst [alert, setAlert] = useState(null) \n\nconst showAlert=(message,type)=>{\n  setAlert({\n    meg:message,\n    type:type\n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 2000);\n}\n\nconst toggleMode = ()=>{\n  if (mode==='light'){\n    setMode('dark')\n    document.body.style.background = \"black\";\n    showAlert(\"Dark Mode Has Been Enabled \",\"success\")\n    setToggleBtnChange('Enable Light Mode');\n    document.title = ' TextUtils - Dark Mode'\n    // setInterval(() => {\n    //   document.title = ' TextUtils - You Have A Virus '\n    // }, 2000);\n\n\n    // setInterval(() => {\n    //   document.title = ' TextUtils - Install Now ';\n    // }, 1500);\n    \n  }\n\n  else{\n    setMode('light')\n    document.body.style.background = \"white\";\n    showAlert(\"Light Mode Has Been Enabled \",\"success\")\n    setToggleBtnChange('Enable Dark Mode')\n    document.title = ' TextUtils - Light Mode'\n  }\n  \n}\n\n  return (\n    <>\n     {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} toggleBtnChange={toggleBtnChange}/>\n        <Alert alert={alert} />\n   \n       {/* <Switch> */}\n\n          {/* <Route exact path=\"/\"> */}\n            <TextForm mode={mode} showAlert={showAlert} heading=\"Enter The Text To Analyze\"/>\n          {/* </Route> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n       \n        {/* </Switch> */}\n\n       {/* </Router> */}\n      \n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}